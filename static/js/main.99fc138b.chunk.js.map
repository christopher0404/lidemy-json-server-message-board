{"version":3,"sources":["components/App/App.js","index.js"],"names":["API_ENDPOINT","Page","styled","div","Title","h1","MessageForm","form","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","p","MessageTime","time","MessageBody","ErrorMessage","Loading","Message","author","children","App","useState","messages","setMessages","messageApiError","setMessageApiError","value","setValue","postMessageError","setPostMessageError","isLoadingPostMessage","setIsLoadingPostMessage","fetchMessages","fetch","then","res","json","data","catch","error","message","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","onChange","target","onFocus","row","toString","length","map","Date","createdAt","toLocaleString","id","ReactDOM","render","document","getElementById"],"mappings":"ysEAIA,IAAMA,EAAe,8CAEfC,EAAOC,IAAOC,IAAV,KAKJC,EAAQF,IAAOG,GAAV,KAILC,EAAcJ,IAAOK,KAAV,KAMXC,EAAkBN,IAAOO,SAAV,KASfC,EAAeR,IAAOS,OAAV,KAcZC,EAAcV,IAAOC,IAAV,KASXU,EAAmBX,IAAOC,IAAV,KAMhBW,EAAcZ,IAAOC,IAAV,KAIXY,EAAgBb,IAAOc,EAAV,KAKbC,EAAcf,IAAOgB,KAAV,KAKXC,EAAcjB,IAAOC,IAAV,KAKXiB,EAAelB,IAAOc,EAAV,KAIZK,EAAUnB,IAAOC,IAAV,KAcb,SAASmB,EAAT,GAA8C,IAA3BC,EAA0B,EAA1BA,OAAQL,EAAkB,EAAlBA,KAAMM,EAAY,EAAZA,SAC/B,OACE,eAACX,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBQ,IAChB,cAACN,EAAD,UAAcC,OAEhB,cAACC,EAAD,UAAcK,OAoHLC,MAzGf,WAAgB,IAAD,EACmBC,mBAAS,MAD5B,mBACNC,EADM,KACIC,EADJ,OAEiCF,mBAAS,MAF1C,mBAENG,EAFM,KAEWC,EAFX,OAGaJ,qBAHb,mBAGNK,EAHM,KAGCC,EAHD,OAImCN,qBAJnC,mBAINO,EAJM,KAIYC,EAJZ,OAK2CR,oBAAS,GALpD,mBAKNS,EALM,KAKgBC,EALhB,KAOPC,EAAgB,WACpB,OAAOC,MAAM,GAAD,OAAItC,EAAJ,iCACTuC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJd,EAAYc,MAEbC,OAAM,SAAAC,GACLd,EAAmBc,EAAMC,aA+C/B,OAJAC,qBAAU,WACRT,MACC,IAGD,eAACpC,EAAD,WACGkC,GAAwB,cAACd,EAAD,yBAEzB,cAACjB,EAAD,4BAEA,eAACE,EAAD,CAAayC,SAzCQ,SAAAC,GACvBA,EAAEC,iBACEd,IACJC,GAAwB,GAExBE,MAAM,GAAD,OAAItC,GAAgB,CACvBkD,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,SAAU,UACVH,KAAMrB,MAGPQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJN,GAAwB,GACR,IAAZM,EAAKc,IAITxB,EAAS,IACTK,KAJEH,EAAoBQ,EAAKG,YAM5BF,OAAM,SAAAC,GACLR,GAAwB,GACxBF,EAAoBU,EAAMC,cAc5B,UACE,cAACrC,EAAD,CACEuB,MAAOA,EACP0B,SApDqB,SAAAT,GAC3BhB,EAASgB,EAAEU,OAAO3B,QAoDZ4B,QAjDoB,WAC1BzB,EAAoB,OAiDd0B,IAAK,IAGP,8BACE,cAAClD,EAAD,uBAGDuB,GAAoB,cAACb,EAAD,UAAea,OAGrCJ,GACC,eAACT,EAAD,oCACyBS,EAAgBgC,cAI1ClC,GAAgC,IAApBA,EAASmC,QAAgB,2CAEtC,cAAClD,EAAD,UACGe,GAAYA,EAASoC,KAAI,SAAAlB,GAAO,OAC/B,cAACvB,EAAD,CAEEC,OAAQsB,EAAQU,SAChBrC,KAAM,IAAI8C,KAAKnB,EAAQoB,WAAWC,iBAHpC,SAKGrB,EAAQO,MAJJP,EAAQsB,aC3MzBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.99fc138b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst API_ENDPOINT = 'https://student-json-api.lidemy.me/comments';\n\nconst Page = styled.div`\n  max-width: 40rem;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  color: #333;\n`;\n\nconst MessageForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 2rem;\n`;\n\nconst MessageTextArea = styled.textarea`\n  resize: none;\n  background: none;\n  padding: 1rem;\n  /* border: none; */\n  margin-bottom: 1rem;\n  font-size: 1.25rem;\n`;\n\nconst SubmitButton = styled.button`\n  appearance: none;\n  background: none;\n  cursor: pointer;\n  display: inline-block;\n  padding: .75rem 1.5rem;\n  border: 1px solid #666;\n  border-radius: 32rem;\n  text-align: center;\n  font-size: 1rem;\n  font-weight: 700;\n  line-height: 1.5;\n`;\n\nconst MessageList = styled.div`\n  padding: 1rem 0;\n  /* background-color: #fafafa;\n  padding: 1rem 2rem;\n  border-radius: 1rem;\n  margin-bottom: 2.5rem;\n  box-shadow: 0 0 1rem rgba(0,0,0,0.125); */\n`;\n\nconst MessageContainer = styled.div`\n  padding: 1rem 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.25);\n  margin-bottom: 1rem;\n`;\n\nconst MessageHead = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst MessageAuthor = styled.p`\n  margin: 0;\n  font-size: 1.25rem;\n`;\n\nconst MessageTime = styled.time`\n  color: #666;\n  font-size: 0.75rem;\n`;\n\nconst MessageBody = styled.div`\n  white-space: pre-wrap;\n  word-break: break-word;\n`;\n\nconst ErrorMessage = styled.p`\n  color: red;\n`;\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.5);\n  color: #fff;\n  font-size: 2rem;\n`;\n\nfunction Message({ author, time, children }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  )\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node,\n};\n\nfunction App() {\n  const [messages, setMessages] = useState(null);\n  const [messageApiError, setMessageApiError] = useState(null);\n  const [value, setValue] = useState();\n  const [postMessageError, setPostMessageError] = useState();\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false);\n\n  const fetchMessages = () => {\n    return fetch(`${API_ENDPOINT}?_sort=createdAt&_order=desc`)\n      .then(res => res.json())\n      .then(data => {\n        setMessages(data)\n      })\n      .catch(error => {\n        setMessageApiError(error.message)\n      })\n  }\n\n  const handleTextareaChange = e => {\n    setValue(e.target.value);\n  }\n\n  const handleTextareaFocus = () => {\n    setPostMessageError(null);\n  }\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (isLoadingPostMessage) return;\n    setIsLoadingPostMessage(true);\n\n    fetch(`${API_ENDPOINT}`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        nickname: 'my name',\n        body: value,\n      }),\n    })\n      .then(res => res.json())\n      .then(data => {\n        setIsLoadingPostMessage(false)\n        if (data.ok === 0) {\n          setPostMessageError(data.message);\n          return;\n        }\n        setValue('');\n        fetchMessages();\n      })\n      .catch(error => {\n        setIsLoadingPostMessage(false);\n        setPostMessageError(error.message)\n      });\n  }\n\n  useEffect(() => {\n    fetchMessages()\n  }, []);\n\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading...</Loading>}\n\n      <Title>Message Board</Title>\n\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextArea\n          value={value}\n          onChange={handleTextareaChange}\n          onFocus={handleTextareaFocus}\n          row={4}\n        />\n\n        <div>\n          <SubmitButton>submit</SubmitButton>\n        </div>\n\n        {postMessageError && <ErrorMessage>{postMessageError}</ErrorMessage>}\n      </MessageForm>\n\n      {messageApiError && (\n        <ErrorMessage>\n          Something went wrong. {messageApiError.toString()}\n        </ErrorMessage>\n      )}\n\n      {messages && messages.length === 0 && <p>No Message</p>}\n\n      <MessageList>\n        {messages && messages.map(message => (\n          <Message\n            key={message.id}\n            author={message.nickname}\n            time={new Date(message.createdAt).toLocaleString()}\n          >\n            {message.body}\n          </Message>\n        ))}\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}